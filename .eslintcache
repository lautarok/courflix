[{"/home/lautaro/Proyectos/courflix/src/index.js":"1","/home/lautaro/Proyectos/courflix/src/App.js":"2","/home/lautaro/Proyectos/courflix/src/pages/Accounts.js":"3","/home/lautaro/Proyectos/courflix/src/components/Vector.js":"4","/home/lautaro/Proyectos/courflix/src/pages/Edit.js":"5","/home/lautaro/Proyectos/courflix/src/pages/View.js":"6"},{"size":155,"mtime":1607116390113,"results":"7","hashOfConfig":"8"},{"size":2515,"mtime":1607104426624,"results":"9","hashOfConfig":"8"},{"size":3436,"mtime":1607099048304,"results":"10","hashOfConfig":"8"},{"size":615,"mtime":1607041711621,"results":"11","hashOfConfig":"8"},{"size":9167,"mtime":1607102637566,"results":"12","hashOfConfig":"8"},{"size":2306,"mtime":1607103790755,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"89v98r",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},"/home/lautaro/Proyectos/courflix/src/index.js",[],"/home/lautaro/Proyectos/courflix/src/App.js",[],["30","31"],"/home/lautaro/Proyectos/courflix/src/pages/Accounts.js",[],"/home/lautaro/Proyectos/courflix/src/components/Vector.js",[],["32","33"],"/home/lautaro/Proyectos/courflix/src/pages/Edit.js",["34"],"import { useState } from 'react';\n\n// IMAGES\nimport Logo from '../global/media/logo.png';\n\n// COMPONENTS\nimport Vector from '../components/Vector';\n\n// STYLES\nimport './css/Edit.css';\n\nfunction Edit(props) {\n    let [_nameValue, _setNameValue] = useState(props.account.name || ''),\n        [_imageSelected, _setImageSelected] = useState(props.account.image || 1),\n        saved = false;\n    \n    function _handleNameValue(event) {\n        _setNameValue(event.target.value);\n    }\n    \n    function _handleImageSelectedValue(image) {\n        _setImageSelected(image);\n    }\n    \n    function _handleSave() {\n        if(_nameValue.length <= 25 && _nameValue.length >= 3) {\n            let data = JSON.parse(window.localStorage.getItem('accounts'));\n            data[props.account.id].name = _nameValue;\n            data[props.account.id].image = _imageSelected;\n            window.localStorage.setItem('accounts', JSON.stringify(data));\n            window.location = '/ManageProfiles';\n        }\n        else if(_nameValue.length >= 25) {\n            alert('El nombre es muy largo');\n        }\n        else if(_nameValue.length < 3) {\n            alert('El nombre es muy corto');\n        }\n    }\n    \n    function _handleDelete() {\n        if(!props.account.isAdmin) {\n            let data = JSON.parse(window.localStorage.getItem('accounts')),\n                newData = [],\n                setId = 0;\n            for(let i = 0; i <= data.length - 1; i++) {\n                if(i !== props.account.id) {\n                    newData.push(data[i]);\n                    newData[setId].id = setId;\n                    setId++;\n                }\n            }\n            console.log(newData);\n            window.localStorage.setItem('accounts', JSON.stringify(newData));\n            window.location = '/ManageProfiles';\n        }\n    }\n    \n    function _handleNewSave() {\n        let data = JSON.parse(window.localStorage.getItem('accounts'));\n        if(!props.account && _nameValue.length >= 3 && _nameValue.length <= 25 && !saved) {\n            data.push({\n                id: data.length,\n                image: _imageSelected,\n                name: _nameValue\n            });\n            window.localStorage.setItem('accounts', JSON.stringify(data));\n            window.location = '/ManageProfiles';\n            saved = true;\n        }\n        else if(_nameValue.length > 25) {\n            alert('El nombre es muy largo');\n        }\n        else if(_nameValue.length < 3) {\n            alert('El nombre es muy corto');\n        }\n    }\n    \n    return(\n        <div id='page' className='edit'>\n            <header>\n                <a aria-label='Courflix' href='/'>\n                    <img alt='Courflix logo' src={ Logo } />\n                </a>\n            </header>\n            <div className='content'>\n                <div className='title'>\n                    <span>Editar perfil</span>\n                </div>\n                <div className='profile'>\n                    <div className='user'>\n                        <div className='avatar'>\n                            <img src={ require('../global/media/users/' + _imageSelected + '.png').default } />\n                        </div>\n                        <div className='basic'>\n                            <input type='text' autoComplete='off' placeholder='Nombre de la cuenta' value={ _nameValue } onChange={ _handleNameValue.bind(this) } contentEditable={ true } disabled={ false } />\n                        </div>\n                    </div>\n                </div>\n                <nav className='avatars'>\n                    <div className='title'>\n                        <span>Avatares</span>\n                    </div>\n                    <ul>\n                        <li>\n                            <button onClick={ _handleImageSelectedValue.bind(this, 1) }>\n                                <img alt='avatar' src={ require('../global/media/users/1.png').default } />\n                                {\n                                    _imageSelected === 1 ? (\n                                        <div className='selected'>\n                                            <Vector set='edit' />\n                                        </div>\n                                    ) : null\n                                }\n                            </button>\n                        </li>\n                        <li>\n                            <button onClick={ _handleImageSelectedValue.bind(this, 2) }>\n                                <img alt='avatar' src={ require('../global/media/users/2.png').default } />\n                                {\n                                    _imageSelected === 2 ? (\n                                        <div className='selected'>\n                                            <Vector set='edit' />\n                                        </div>\n                                    ) : null\n                                }\n                            </button>\n                        </li>\n                        <li>\n                            <button onClick={ _handleImageSelectedValue.bind(this, 3) }>\n                                <img alt='avatar' src={ require('../global/media/users/3.png').default } />\n                                {\n                                    _imageSelected === 3 ? (\n                                        <div className='selected'>\n                                            <Vector set='edit' />\n                                        </div>\n                                    ) : null\n                                }\n                            </button>\n                        </li>\n                        <li>\n                            <button onClick={ _handleImageSelectedValue.bind(this, 4) }>\n                                <img alt='avatar' src={ require('../global/media/users/4.png').default } />\n                                {\n                                    _imageSelected === 4 ? (\n                                        <div className='selected'>\n                                            <Vector set='edit' />\n                                        </div>\n                                    ) : null\n                                }\n                            </button>\n                        </li>\n                        <li>\n                            <button onClick={ _handleImageSelectedValue.bind(this, 5) }>\n                                <img alt='avatar' src={ require('../global/media/users/5.png').default } />\n                                {\n                                    _imageSelected === 5 ? (\n                                        <div className='selected'>\n                                            <Vector set='edit' />\n                                        </div>\n                                    ) : null\n                                }\n                            </button>\n                        </li>\n                        <li>\n                            <button onClick={ _handleImageSelectedValue.bind(this, 6) }>\n                                <img alt='avatar' src={ require('../global/media/users/6.png').default } />\n                                {\n                                    _imageSelected === 6 ? (\n                                        <div className='selected'>\n                                            <Vector set='edit' />\n                                        </div>\n                                    ) : null\n                                }\n                            </button>\n                        </li>\n                        <li>\n                            <button onClick={ _handleImageSelectedValue.bind(this, 7) }>\n                                <img alt='avatar' src={ require('../global/media/users/7.png').default } />\n                                {\n                                    _imageSelected === 7 ? (\n                                        <div className='selected'>\n                                            <Vector set='edit' />\n                                        </div>\n                                    ) : null\n                                }\n                            </button>\n                        </li>\n                    </ul>\n                </nav>\n                <nav className='actions'>\n                    <button onClick={ props.account ? ( _handleSave.bind(this) ) : ( _handleNewSave.bind(this) ) } className='primary'>\n                        <span>Guardar</span>\n                    </button>\n                    <a href='/ManageProfiles' style={ props.account.isAdmin ? ({ marginRight: 0 }) : (null) }>\n                        <span>Cancelar</span>\n                    </a>\n                    {\n                        props.account && !props.account.isAdmin ? (\n                            <button onClick={ _handleDelete.bind(this) } style={{ marginRight: 0 }}>\n                                <span>Eliminar perfil</span>\n                            </button>\n                        ) : null\n                    }\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default Edit;","/home/lautaro/Proyectos/courflix/src/pages/View.js",["35"],"// IMAGES\nimport Logo from '../global/media/logo.png';\n\n// STYLES\nimport './css/View.css';\n\nfunction View(props) {\n    return(\n        <div id='page' className='view' style={ props.account.image !== 6 && props.account.image !== 7 ? ({ backgroundImage: 'url(\\'' + require('../global/media/covers/' + props.account.image + '.jpg').default + '\\')', backgroundSize: 'cover', backgroundRepeat: 'no-repeat' }) : (props.account.image === 7 ? ({ backgroundColor: '#C00' }) : ({ backgroundColor: '#00C' })) }>\n            <header>\n                <a aria-label='Courflix'>\n                    <img alt='Courflix logo' src={ Logo } />\n                </a>\n                <nav>\n                    <ul>\n                        <li>\n                            <a href={ '/edit/' + props.account.id }>\n                                <span>Editar</span>\n                            </a>\n                        </li>\n                        <li>\n                            <a href='/' className='primary'>\n                                <span>Ver cuentas</span>\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n            </header>\n            <div className='content'>\n                <div className='text'>\n                    <div className='title'>\n                        <span>Estas en el perfil de <span>{ props.account.name }</span></span>\n                    </div>\n                    <div className='description'>\n                        <span>Este sistema guarda datos con localStorage, creado por Augusto Lautaro Kazalukian</span>\n                    </div>\n                    <nav>\n                        <ul>\n                            <li>\n                                <a href='/edit/new' className='primary'>\n                                    <span>Crear usuario</span>\n                                </a>\n                            </li>\n                            <li>\n                                <a href={ '/edit/' + props.account.id }>\n                                    <span>Editar usuario</span>\n                                </a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default View;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"36","replacedBy":"40"},{"ruleId":"38","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":93,"column":29,"nodeType":"44","endLine":93,"endColumn":112},{"ruleId":"45","severity":1,"message":"46","line":11,"column":17,"nodeType":"44","endLine":11,"endColumn":42},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],["47"],["48"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]